---
# This default profile is used when running a single instance completely standalone:
spring:
  profiles: default
server:
  port: 8760
eureka:
  instance:
    hostname: eurekahost 
  client:
    registerWithEureka: false
    fetchRegistry: false
    serviceUrl:
      defaultZone: http://${eureka.instance.hostname}:${server.port}/eureka/    

# primary, secondary, and tertiary illustrate running 3 intercommunicating instances.  This example has them running
# side-by-side on localhost -- which is unrealistic in production -- but does illustrate how multiple instances collaborate.
# Run by opening 3 separate command prompts:
# java -jar -Dspring.profiles.active=primary eureka-server-0.0.1-SNAPSHOT.jar
# java -jar -Dspring.profiles.active=secondary eureka-server-0.0.1-SNAPSHOT.jar
# java -jar -Dspring.profiles.active=tertiary eureka-server-0.0.1-SNAPSHOT.jar

---
spring:
  profiles: primary
  application:
    name: eureka-server-clustered   
server:
  port: 8761  
eureka:
  instance:
    hostname: eureka-primary       
  client:
    registerWithEureka: true
    fetchRegistry: true        
    serviceUrl:
      defaultZone: http://eureka-secondary:8762/eureka/,http://eureka-tertiary:8763/eureka/

---
spring:
  profiles: secondary
  application:
    name: eureka-server-clustered      
server:
  port: 8762
eureka:
  instance:
    hostname: eureka-secondary       
  client:
    registerWithEureka: true
    fetchRegistry: true        
    serviceUrl:
      defaultZone: http://eureka-tertiary:8763/eureka/,http://eureka-primary:8761/eureka/

---
spring:
  profiles: tertiary
  application:
    name: eureka-server-clustered      
server:
  port: 8763
eureka:
  instance:
    hostname: eureka-tertiary       
  client:
    registerWithEureka: true
    fetchRegistry: true    
    serviceUrl:
      defaultZone: http://eureka-primary:8761/eureka/,http://eureka-secondary:8762/eureka/